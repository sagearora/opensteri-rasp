name: Auto Version Bump

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '.github/workflows/version-bump.yml'

jobs:
  version-bump:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get current version
        id: current-version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

      - name: Check if version bump is needed
        id: version-check
        run: |
          # Get the last commit message
          LAST_COMMIT_MSG=$(git log -1 --pretty=%B)
          
          # Check if this is a version bump commit (to avoid infinite loops)
          if [[ "$LAST_COMMIT_MSG" == *"[version-bump]"* ]]; then
            echo "skip_bump=true" >> $GITHUB_OUTPUT
            echo "Skipping version bump - this is already a version bump commit"
          else
            echo "skip_bump=false" >> $GITHUB_OUTPUT
            echo "Version bump needed"
          fi

      - name: Bump version
        if: steps.version-check.outputs.skip_bump == 'false'
        id: bump-version
        run: |
          # Increment patch version
          NEW_VERSION=$(npm version patch --no-git-tag-version)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

      - name: Commit and push version bump
        if: steps.version-check.outputs.skip_bump == 'false'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json package-lock.json
          git commit -m "[version-bump] Bump version to ${{ steps.bump-version.outputs.new_version }}"
          git push 